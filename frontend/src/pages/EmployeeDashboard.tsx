import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  Alert,\n  CircularProgress,\n  Divider,\n  Button,\n} from '@mui/material';\nimport {\n  AccountBalanceWallet as WalletIcon,\n  History as HistoryIcon,\n  Receipt as ReceiptIcon,\n  TrendingUp as TrendingUpIcon,\n  Refresh as RefreshIcon,\n} from '@mui/icons-material';\nimport { EmployeeGuard } from '../components/RoleGuard';\nimport { EncryptedDataDisplay } from '../components/EncryptedDataDisplay';\nimport { PaymentHistory } from '../components/PaymentHistory';\nimport { useWalletContext } from '../contexts/WalletContext';\nimport { useAuthContext } from '../contexts/AuthContext';\nimport { usePayrollContract } from '../hooks/usePayrollContract';\nimport { Employee, PaymentHistory as PaymentHistoryType } from '../types';\nimport { formatDate } from '../utils/formatters';\n\nexport const EmployeeDashboard: React.FC = () => {\n  const { walletState, provider, signer } = useWalletContext();\n  const { user } = useAuthContext();\n  const { getEmployeeInfo, getPaymentHistory } = usePayrollContract(provider, signer);\n  \n  const [employee, setEmployee] = useState<Employee | null>(null);\n  const [paymentHistory, setPaymentHistory] = useState<PaymentHistoryType[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [lastRefresh, setLastRefresh] = useState<Date>(new Date());\n\n  useEffect(() => {\n    if (walletState.address) {\n      fetchEmployeeData();\n    }\n  }, [walletState.address]);\n\n  const fetchEmployeeData = async () => {\n    if (!walletState.address) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Fetch employee information\n      const employeeInfo = await getEmployeeInfo(walletState.address, walletState.address);\n      if (employeeInfo) {\n        setEmployee(employeeInfo);\n      }\n\n      // Fetch payment history\n      const history = await getPaymentHistory(walletState.address, walletState.address);\n      setPaymentHistory(history);\n      \n      setLastRefresh(new Date());\n    } catch (err: any) {\n      setError(err.message || 'Failed to fetch employee data');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRefresh = () => {\n    fetchEmployeeData();\n  };\n\n  const calculateYTDEarnings = (): number => {\n    const currentYear = new Date().getFullYear();\n    return paymentHistory\n      .filter(payment => new Date(payment.date).getFullYear() === currentYear)\n      .length; // Mock calculation - in real app would sum decrypted amounts\n  };\n\n  if (isLoading) {\n    return (\n      <EmployeeGuard>\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" p={8}>\n          <CircularProgress size={60} />\n          <Typography variant=\"h6\" ml={2}>\n            Loading your dashboard...\n          </Typography>\n        </Box>\n      </EmployeeGuard>\n    );\n  }\n\n  return (\n    <EmployeeGuard>\n      <Box>\n        {/* Header */}\n        <Paper sx={{ p: 3, mb: 3, backgroundColor: 'primary.main', color: 'primary.contrastText' }}>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Box>\n              <Typography variant=\"h4\" fontWeight=\"bold\">\n                Welcome, {employee?.name || 'Employee'}\n              </Typography>\n              <Typography variant=\"subtitle1\" sx={{ opacity: 0.9 }}>\n                Employee Dashboard - Your confidential payroll information\n              </Typography>\n            </Box>\n            <Button\n              variant=\"outlined\"\n              startIcon={<RefreshIcon />}\n              onClick={handleRefresh}\n              sx={{ \n                color: 'white', \n                borderColor: 'rgba(255,255,255,0.3)',\n                '&:hover': { borderColor: 'white' }\n              }}\n            >\n              Refresh\n            </Button>\n          </Box>\n        </Paper>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Key Metrics */}\n        <Grid container spacing={3} sx={{ mb: 3 }}>\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                  <WalletIcon color=\"primary\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">Current Salary</Typography>\n                </Box>\n                {employee && (\n                  <EncryptedDataDisplay\n                    encryptedValue={employee.baseSalary}\n                    label=\"Monthly Base Salary\"\n                    size=\"large\"\n                    autoDecrypt={true}\n                  />\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                  <HistoryIcon color=\"secondary\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">Payment Count</Typography>\n                </Box>\n                <Typography variant=\"h4\" color=\"secondary.main\">\n                  {paymentHistory.length}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Total payments received\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                  <TrendingUpIcon color=\"success\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">YTD Payments</Typography>\n                </Box>\n                <Typography variant=\"h4\" color=\"success.main\">\n                  {calculateYTDEarnings()}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Payments this year\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                  <ReceiptIcon color=\"info\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">Employment</Typography>\n                </Box>\n                <Typography variant=\"h6\" color=\"info.main\">\n                  {employee?.position || 'N/A'}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Since {employee ? formatDate(employee.hireDate) : 'N/A'}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n\n        {/* Employee Information */}\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Paper sx={{ p: 3 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Employee Information\n              </Typography>\n              <Divider sx={{ mb: 2 }} />\n              \n              <Box display=\"flex\" justifyContent=\"space-between\" py={1}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Name:\n                </Typography>\n                <Typography variant=\"body2\" fontWeight={500}>\n                  {employee?.name || 'Not available'}\n                </Typography>\n              </Box>\n              \n              <Box display=\"flex\" justifyContent=\"space-between\" py={1}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Position:\n                </Typography>\n                <Typography variant=\"body2\" fontWeight={500}>\n                  {employee?.position || 'Not available'}\n                </Typography>\n              </Box>\n              \n              <Box display=\"flex\" justifyContent=\"space-between\" py={1}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Employee ID:\n                </Typography>\n                <Typography variant=\"body2\" fontWeight={500}>\n                  {employee?.id || 'Not available'}\n                </Typography>\n              </Box>\n              \n              <Box display=\"flex\" justifyContent=\"space-between\" py={1}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Hire Date:\n                </Typography>\n                <Typography variant=\"body2\" fontWeight={500}>\n                  {employee ? formatDate(employee.hireDate) : 'Not available'}\n                </Typography>\n              </Box>\n              \n              <Box display=\"flex\" justifyContent=\"space-between\" py={1}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Status:\n                </Typography>\n                <Typography \n                  variant=\"body2\" \n                  fontWeight={500}\n                  color={employee?.isActive ? 'success.main' : 'error.main'}\n                >\n                  {employee?.isActive ? 'Active' : 'Inactive'}\n                </Typography>\n              </Box>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Paper sx={{ p: 3 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Compensation Details\n              </Typography>\n              <Divider sx={{ mb: 2 }} />\n              \n              {employee && (\n                <Box>\n                  <EncryptedDataDisplay\n                    encryptedValue={employee.baseSalary}\n                    label=\"Base Salary (Monthly)\"\n                    variant=\"currency\"\n                    size=\"medium\"\n                    showToggle={true}\n                  />\n                  \n                  <Box mt={3}>\n                    <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                      Privacy Notice:\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      Your salary information is encrypted using Fully Homomorphic Encryption (FHE). \n                      Only you can decrypt and view your compensation details.\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n\n        {/* Payment History */}\n        <Paper sx={{ mt: 3 }}>\n          <Box p={3}>\n            <Typography variant=\"h6\" gutterBottom>\n              Payment History\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" mb={2}>\n              Your complete payment history with encrypted amounts\n            </Typography>\n            <Divider sx={{ mb: 2 }} />\n            \n            <PaymentHistory \n              payments={paymentHistory}\n              showEmployeeColumn={false}\n              currentUserAddress={walletState.address}\n            />\n          </Box>\n        </Paper>\n\n        {/* Footer Info */}\n        <Paper sx={{ p: 2, mt: 3, backgroundColor: 'grey.50' }}>\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            Last updated: {lastRefresh.toLocaleString()} • \n            Data is encrypted and visible only to you • \n            Connected: {walletState.address}\n          </Typography>\n        </Paper>\n      </Box>\n    </EmployeeGuard>\n  );\n};"
import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  Button,\n  Alert,\n  CircularProgress,\n  Tabs,\n  Tab,\n} from '@mui/material';\nimport {\n  People as PeopleIcon,\n  AttachMoney as MoneyIcon,\n  Business as BusinessIcon,\n  TrendingUp as TrendingUpIcon,\n  Add as AddIcon,\n  CardGiftcard as BonusIcon,\n} from '@mui/icons-material';\nimport { EmployerGuard } from '../components/RoleGuard';\nimport { EmployeeManagement } from '../components/EmployeeManagement';\nimport { BonusDistribution } from '../components/BonusDistribution';\nimport { useWalletContext } from '../contexts/WalletContext';\nimport { usePayrollContract } from '../hooks/usePayrollContract';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`employer-tabpanel-${index}`}\n      aria-labelledby={`employer-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ pt: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nexport const EmployerDashboard: React.FC = () => {\n  const { walletState, provider, signer } = useWalletContext();\n  const { getActiveEmployeeCount } = usePayrollContract(provider, signer);\n  \n  const [activeTab, setActiveTab] = useState(0);\n  const [stats, setStats] = useState({\n    totalEmployees: 0,\n    activeEmployees: 0,\n    totalPayroll: 0,\n    avgSalary: 0,\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetchDashboardStats();\n  }, [walletState.address]);\n\n  const fetchDashboardStats = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const activeCount = await getActiveEmployeeCount();\n      \n      setStats({\n        totalEmployees: activeCount,\n        activeEmployees: activeCount,\n        totalPayroll: 0, // Would be calculated from encrypted values\n        avgSalary: 0, // Would be calculated from encrypted values\n      });\n    } catch (err: any) {\n      setError(err.message || 'Failed to fetch dashboard statistics');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  if (isLoading) {\n    return (\n      <EmployerGuard>\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" p={8}>\n          <CircularProgress size={60} />\n          <Typography variant=\"h6\" ml={2}>\n            Loading employer dashboard...\n          </Typography>\n        </Box>\n      </EmployerGuard>\n    );\n  }\n\n  return (\n    <EmployerGuard>\n      <Box>\n        {/* Header */}\n        <Paper sx={{ p: 3, mb: 3, backgroundColor: 'secondary.main', color: 'secondary.contrastText' }}>\n          <Box display=\"flex\" justifyContent=\"between\" alignItems=\"center\">\n            <Box>\n              <Typography variant=\"h4\" fontWeight=\"bold\">\n                Employer Dashboard\n              </Typography>\n              <Typography variant=\"subtitle1\" sx={{ opacity: 0.9 }}>\n                Manage employees and distribute bonuses with full privacy\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Statistics Cards */}\n        <Grid container spacing={3} sx={{ mb: 3 }}>\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                  <PeopleIcon color=\"primary\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">Total Employees</Typography>\n                </Box>\n                <Typography variant=\"h4\" color=\"primary.main\">\n                  {stats.totalEmployees}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Active employees\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                  <BusinessIcon color=\"secondary\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">Active Staff</Typography>\n                </Box>\n                <Typography variant=\"h4\" color=\"secondary.main\">\n                  {stats.activeEmployees}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Currently employed\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                  <MoneyIcon color=\"success\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">Payroll Budget</Typography>\n                </Box>\n                <Typography variant=\"h4\" color=\"success.main\">\n                  ðŸ”’ Encrypted\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Total monthly budget\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\n                  <TrendingUpIcon color=\"info\" sx={{ mr: 1 }} />\n                  <Typography variant=\"h6\">Avg. Salary</Typography>\n                </Box>\n                <Typography variant=\"h4\" color=\"info.main\">\n                  ðŸ”’ Encrypted\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Average compensation\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n\n        {/* Tabs for different functions */}\n        <Paper sx={{ mb: 3 }}>\n          <Tabs \n            value={activeTab} \n            onChange={handleTabChange} \n            variant=\"fullWidth\"\n            sx={{ borderBottom: 1, borderColor: 'divider' }}\n          >\n            <Tab \n              label=\"Employee Management\" \n              icon={<PeopleIcon />} \n              iconPosition=\"start\"\n            />\n            <Tab \n              label=\"Bonus Distribution\" \n              icon={<BonusIcon />} \n              iconPosition=\"start\"\n            />\n          </Tabs>\n\n          <TabPanel value={activeTab} index={0}>\n            <EmployeeManagement onEmployeeChange={fetchDashboardStats} />\n          </TabPanel>\n\n          <TabPanel value={activeTab} index={1}>\n            <BonusDistribution />\n          </TabPanel>\n        </Paper>\n\n        {/* Quick Actions */}\n        <Paper sx={{ p: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Quick Actions\n          </Typography>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} sm={6} md={3}>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                startIcon={<AddIcon />}\n                onClick={() => setActiveTab(0)}\n              >\n                Add Employee\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                startIcon={<BonusIcon />}\n                onClick={() => setActiveTab(1)}\n              >\n                Distribute Bonus\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                startIcon={<TrendingUpIcon />}\n                disabled\n              >\n                View Analytics\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                startIcon={<PeopleIcon />}\n                disabled\n              >\n                Generate Report\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        {/* Privacy Notice */}\n        <Alert severity=\"info\" sx={{ mt: 3 }}>\n          <Typography variant=\"body2\">\n            <strong>Privacy Notice:</strong> All employee salary information is encrypted using Fully Homomorphic Encryption (FHE). \n            As an employer, you can manage employees and distribute bonuses without seeing individual salary details.\n          </Typography>\n        </Alert>\n      </Box>\n    </EmployerGuard>\n  );\n};"